# 1 "lsp/src/uri_lexer.mll"
 

open Import

type t =
  { scheme : string
  ; authority : string
  ; path : string
  ; query: string option
  ; fragment: string option
  }

let int_of_hex_char c =
  let c = int_of_char (Char.uppercase_ascii c) - 48 in
  if c > 9 then
    if c > 16 && c < 23 then Some (c - 7) else None
  else if c >= 0 then
    Some c
  else
    None

let value_exn = function
   | None -> assert false
   | Some s -> s

let char_of_hexdigits high low =
  let high = value_exn (int_of_hex_char high) in
  let low = value_exn (int_of_hex_char low) in
  Char.chr (high lsl 4 + low)

(* https://github.com/mirage/ocaml-uri/blob/master/lib/uri.ml#L318 *)
let decode b =
  let len = String.length b in
  let buf = Buffer.create len in
  let rec scan start cur =
    if cur >= len then
      Buffer.add_substring buf b start (cur - start)
    else if b.[cur] = '%' then (
      Buffer.add_substring buf b start (cur - start);
      let cur = cur + 1 in
      if cur >= len then
        Buffer.add_char buf '%'
      else
        match int_of_hex_char b.[cur] with
        | None ->
          Buffer.add_char buf '%';
          scan cur cur
        | Some highbits ->
          let cur = cur + 1 in
          if cur >= len then (
            Buffer.add_char buf '%';
            Buffer.add_char buf b.[cur - 1])
          else
            let start_at =
              match int_of_hex_char b.[cur] with
              | Some lowbits ->
                Buffer.add_char buf (Char.chr ((highbits lsl 4) + lowbits));
                cur + 1
              | None ->
                Buffer.add_char buf '%';
                Buffer.add_char buf b.[cur - 1];
                cur
            in
            scan start_at start_at)
    else
      scan start (cur + 1)
  in
  scan 0 0;
  Buffer.contents buf

# 73 "lsp/src/uri_lexer.ml"
let __ocaml_lex_tables = {
  Lexing.lex_base =
   "\000\000\253\255\079\000\255\255\102\000\254\255\126\000\001\000\
    \009\000\061\000\127\000\128\000\147\000\002\000\025\000\102\000\
    \148\000\150\000\003\000\027\000\103\000\004\000\005\000\158\000\
    \006\000\056\000\125\000\007\000\008\000\045\000\010\000\046\000\
    \011\000\047\000\012\000";
  Lexing.lex_backtrk =
   "\002\000\255\255\255\255\255\255\255\255\255\255\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\004\000\003\000\
    \003\000\002\000\001\000";
  Lexing.lex_default =
   "\255\255\000\000\255\255\000\000\255\255\000\000\011\000\007\000\
    \008\000\009\000\009\000\011\000\015\000\013\000\014\000\015\000\
    \015\000\017\000\018\000\019\000\020\000\021\000\022\000\023\000\
    \024\000\025\000\026\000\027\000\028\000\030\000\030\000\032\000\
    \032\000\033\000\034\000";
  Lexing.lex_trans =
   "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\003\000\000\000\001\000\003\000\002\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\028\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\022\000\003\000\021\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\027\000\031\000\033\000\034\000\003\000\
    \007\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\000\000\008\000\000\000\003\000\004\000\
    \004\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\
    \004\000\013\000\018\000\000\000\000\000\000\000\000\000\000\000\
    \004\000\004\000\004\000\004\000\004\000\004\000\005\000\005\000\
    \005\000\005\000\005\000\005\000\005\000\005\000\005\000\005\000\
    \024\000\007\000\007\000\007\000\000\000\014\000\019\000\005\000\
    \005\000\005\000\005\000\005\000\005\000\010\000\023\000\009\000\
    \004\000\004\000\004\000\004\000\004\000\004\000\013\000\013\000\
    \009\000\018\000\012\000\000\000\025\000\008\000\008\000\008\000\
    \000\000\024\000\016\000\017\000\000\000\020\000\000\000\005\000\
    \005\000\005\000\005\000\005\000\005\000\026\000\000\000\000\000\
    \000\000\000\000\014\000\014\000\000\000\019\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\025\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \001\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\255\255\000\000\255\255\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\255\255\255\255\255\255\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \255\255\000\000\000\000\000\000\000\000\255\255\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\255\255\255\255\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\255\255\255\255\255\255\
    \255\255\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\255\255\255\255\000\000\255\255\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\255\255";
  Lexing.lex_check =
   "\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\000\000\255\255\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\008\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\014\000\000\000\019\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\025\000\029\000\031\000\033\000\000\000\
    \009\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\255\255\009\000\255\255\000\000\002\000\
    \002\000\002\000\002\000\002\000\002\000\002\000\002\000\002\000\
    \002\000\015\000\020\000\255\255\255\255\255\255\255\255\255\255\
    \002\000\002\000\002\000\002\000\002\000\002\000\004\000\004\000\
    \004\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\
    \026\000\006\000\010\000\011\000\255\255\015\000\020\000\004\000\
    \004\000\004\000\004\000\004\000\004\000\006\000\010\000\011\000\
    \002\000\002\000\002\000\002\000\002\000\002\000\012\000\016\000\
    \006\000\017\000\011\000\255\255\026\000\006\000\010\000\011\000\
    \255\255\023\000\012\000\016\000\255\255\017\000\255\255\004\000\
    \004\000\004\000\004\000\004\000\004\000\023\000\255\255\255\255\
    \255\255\255\255\012\000\016\000\255\255\017\000\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\023\000\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \000\000\007\000\013\000\018\000\021\000\022\000\024\000\027\000\
    \028\000\008\000\030\000\032\000\034\000\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\014\000\255\255\019\000\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\029\000\031\000\033\000\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \025\000\255\255\255\255\255\255\255\255\009\000\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\015\000\020\000\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\026\000\006\000\010\000\
    \011\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\012\000\016\000\255\255\017\000\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\023\000";
  Lexing.lex_base_code =
   "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\001\000\
    \002\000\003\000\004\000\006\000\005\000\007\000\008\000\009\000\
    \010\000\013\000\011\000\014\000\015\000\012\000\016\000\024\000\
    \017\000\019\000\020\000\018\000\021\000\000\000\000\000\005\000\
    \000\000\023\000\000\000";
  Lexing.lex_backtrk_code =
   "\000\000\000\000\000\000\000\000\000\000\000\000\001\000\032\000\
    \050\000\001\000\001\000\001\000\082\000\097\000\114\000\082\000\
    \082\000\131\000\155\000\174\000\131\000\193\000\214\000\233\000\
    \248\000\009\001\233\000\026\001\045\001\000\000\000\000\000\000\
    \000\000\000\000\065\001";
  Lexing.lex_default_code =
   "\000\000\000\000\000\000\000\000\000\000\000\000\014\000\047\000\
    \065\000\024\000\024\000\014\000\024\000\047\000\065\000\024\000\
    \024\000\148\000\047\000\065\000\024\000\047\000\047\000\148\000\
    \047\000\065\000\024\000\047\000\047\000\000\000\000\000\000\000\
    \000\000\062\001\000\000";
  Lexing.lex_trans_code =
   "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\019\000\000\000\019\000\019\000\019\000\
    \019\000\019\000\000\000\019\000\019\000\019\000\000\000\024\000\
    \019\000\019\000\019\000\068\000\062\001\024\000\019\000\019\000\
    \000\000\068\000\024\000\019\000\024\000\000\000\000\000\027\000\
    \077\000\000\000\027\000\027\000\027\000\027\000\000\000\024\000\
    \027\000\027\000\000\000\000\000\027\000\000\000\027\000\000\000\
    \000\000\000\000\000\000\027\000\000\000\000\000\000\000\027\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000";
  Lexing.lex_check_code =
   "\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\006\000\255\255\008\000\009\000\010\000\
    \012\000\011\000\255\255\014\000\015\000\016\000\255\255\006\000\
    \017\000\019\000\020\000\010\000\031\000\011\000\025\000\026\000\
    \255\255\016\000\006\000\023\000\017\000\255\255\255\255\006\000\
    \011\000\255\255\009\000\010\000\012\000\011\000\033\000\023\000\
    \015\000\016\000\255\255\255\255\017\000\255\255\020\000\255\255\
    \255\255\255\255\255\255\026\000\255\255\255\255\255\255\023\000\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \006\000\007\000\008\000\009\000\010\000\012\000\011\000\013\000\
    \014\000\015\000\016\000\018\000\021\000\017\000\019\000\020\000\
    \022\000\024\000\027\000\025\000\026\000\028\000\255\255\033\000\
    \023\000";
  Lexing.lex_code =
   "\255\009\255\007\255\005\255\003\255\000\011\001\010\255\017\255\
    \010\255\255\014\255\013\255\255\010\255\255\016\255\015\255\255\
    \009\255\007\255\003\255\000\011\001\010\005\014\004\013\255\013\
    \255\255\009\255\005\255\003\255\007\016\006\015\000\011\001\010\
    \255\015\255\255\019\255\018\255\011\255\010\255\255\011\255\010\
    \255\255\007\255\005\255\003\255\009\012\008\017\000\011\001\010\
    \255\007\255\003\255\009\012\008\017\000\011\001\010\005\014\004\
    \013\255\005\255\003\255\009\012\008\017\007\016\006\015\000\011\
    \001\010\255\007\255\005\255\009\012\008\017\000\011\001\010\003\
    \019\002\018\255\011\255\010\255\018\255\255\007\255\009\012\008\
    \017\000\011\001\010\005\014\004\013\003\019\002\018\255\005\255\
    \009\012\008\017\007\016\006\015\000\011\001\010\003\019\002\018\
    \255\009\012\008\017\007\016\006\015\000\011\001\010\005\014\004\
    \013\003\019\002\018\255\003\255\009\012\008\017\007\016\006\015\
    \000\011\001\010\005\014\004\013\255\009\255\007\255\005\255\000\
    \011\001\010\003\019\002\018\255\009\255\007\255\000\011\001\010\
    \005\014\004\013\003\019\002\018\255\009\255\005\255\007\016\006\
    \015\000\011\001\010\003\019\002\018\255\009\255\007\016\006\015\
    \000\011\001\010\005\014\004\013\003\019\002\018\255\009\255\003\
    \255\007\016\006\015\000\011\001\010\005\014\004\013\255\001\255\
    \255\000\001\255";
}

let rec query b lexbuf =
   __ocaml_lex_query_rec b lexbuf 0
and __ocaml_lex_query_rec b lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
let
# 77 "lsp/src/uri_lexer.mll"
                                                  c
# 323 "lsp/src/uri_lexer.ml"
= Lexing.sub_lexeme_char lexbuf lexbuf.Lexing.lex_start_pos in
# 77 "lsp/src/uri_lexer.mll"
                                                    ( Buffer.add_char b c; query b lexbuf )
# 327 "lsp/src/uri_lexer.ml"

  | 1 ->
let
# 78 "lsp/src/uri_lexer.mll"
                   high
# 333 "lsp/src/uri_lexer.ml"
= Lexing.sub_lexeme_char lexbuf (lexbuf.Lexing.lex_start_pos + 1)
and
# 78 "lsp/src/uri_lexer.mll"
                                      low
# 338 "lsp/src/uri_lexer.ml"
= Lexing.sub_lexeme_char lexbuf (lexbuf.Lexing.lex_start_pos + 2) in
# 79 "lsp/src/uri_lexer.mll"
  ( Buffer.add_char b (char_of_hexdigits high low);
    query b lexbuf
  )
# 344 "lsp/src/uri_lexer.ml"

  | 2 ->
# 82 "lsp/src/uri_lexer.mll"
                 ( Buffer.contents b )
# 349 "lsp/src/uri_lexer.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf;
      __ocaml_lex_query_rec b lexbuf __ocaml_lex_state

and uri lexbuf =
  lexbuf.Lexing.lex_mem <- Array.make 20 (-1);(* L=3 [12] <- p ; [11] <- p ; [10] <- p ;  *)
  lexbuf.Lexing.lex_mem.(12) <- lexbuf.Lexing.lex_curr_pos ;
  lexbuf.Lexing.lex_mem.(11) <- lexbuf.Lexing.lex_curr_pos ;
  lexbuf.Lexing.lex_mem.(10) <- lexbuf.Lexing.lex_curr_pos ;
 __ocaml_lex_uri_rec lexbuf 6
and __ocaml_lex_uri_rec lexbuf __ocaml_lex_state =
  match Lexing.new_engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
let
# 85 "lsp/src/uri_lexer.mll"
                        scheme
# 366 "lsp/src/uri_lexer.ml"
= Lexing.sub_lexeme_opt lexbuf lexbuf.Lexing.lex_mem.(9) lexbuf.Lexing.lex_mem.(8)
and
# 86 "lsp/src/uri_lexer.mll"
                           authority
# 371 "lsp/src/uri_lexer.ml"
= Lexing.sub_lexeme_opt lexbuf lexbuf.Lexing.lex_mem.(3) lexbuf.Lexing.lex_mem.(2)
and
# 87 "lsp/src/uri_lexer.mll"
                 path
# 376 "lsp/src/uri_lexer.ml"
= Lexing.sub_lexeme lexbuf lexbuf.Lexing.lex_mem.(0) lexbuf.Lexing.lex_mem.(1)
and
# 88 "lsp/src/uri_lexer.mll"
                  raw_query
# 381 "lsp/src/uri_lexer.ml"
= Lexing.sub_lexeme_opt lexbuf lexbuf.Lexing.lex_mem.(7) lexbuf.Lexing.lex_mem.(6)
and
# 89 "lsp/src/uri_lexer.mll"
             fragment
# 386 "lsp/src/uri_lexer.ml"
= Lexing.sub_lexeme_opt lexbuf lexbuf.Lexing.lex_mem.(5) lexbuf.Lexing.lex_mem.(4) in
# 90 "lsp/src/uri_lexer.mll"
(
  let scheme = scheme |> Option.value ~default:"file" in
  let authority =
    authority |> Option.map decode |> Option.value ~default:""
  in
  let path =
    let path = path |> decode in
    match scheme with
    | "http" | "https" | "file" ->
      String.add_prefix_if_not_exists path ~prefix:"/"
    | _ -> path
  in
  let query =
    match raw_query with
    | None -> None
    | Some c -> Some (query (Buffer.create (String.length c)) (Lexing.from_string c))
  in
  { scheme; authority; path; query; fragment }
)
# 408 "lsp/src/uri_lexer.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf;
      __ocaml_lex_uri_rec lexbuf __ocaml_lex_state

and path lexbuf =
  lexbuf.Lexing.lex_mem <- Array.make 2 (-1); __ocaml_lex_path_rec lexbuf 29
and __ocaml_lex_path_rec lexbuf __ocaml_lex_state =
  match Lexing.new_engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
# 111 "lsp/src/uri_lexer.mll"
     ( { scheme = "file"; authority = ""; path = "/"; query = None; fragment = None } )
# 420 "lsp/src/uri_lexer.ml"

  | 1 ->
let
# 112 "lsp/src/uri_lexer.mll"
                    authority
# 426 "lsp/src/uri_lexer.ml"
= Lexing.sub_lexeme lexbuf (lexbuf.Lexing.lex_start_pos + 2) lexbuf.Lexing.lex_mem.(0)
and
# 112 "lsp/src/uri_lexer.mll"
                                           path
# 431 "lsp/src/uri_lexer.ml"
= Lexing.sub_lexeme lexbuf lexbuf.Lexing.lex_mem.(0) lexbuf.Lexing.lex_curr_pos in
# 112 "lsp/src/uri_lexer.mll"
                                                 ( { scheme = "file"; authority; path ; query = None ; fragment = None } )
# 435 "lsp/src/uri_lexer.ml"

  | 2 ->
let
# 113 "lsp/src/uri_lexer.mll"
                    authority
# 441 "lsp/src/uri_lexer.ml"
= Lexing.sub_lexeme lexbuf (lexbuf.Lexing.lex_start_pos + 2) lexbuf.Lexing.lex_curr_pos in
# 113 "lsp/src/uri_lexer.mll"
                               ( { scheme = "file"; authority; path = "/" ; query = None ; fragment = None } )
# 445 "lsp/src/uri_lexer.ml"

  | 3 ->
let
# 114 "lsp/src/uri_lexer.mll"
             path
# 451 "lsp/src/uri_lexer.ml"
= Lexing.sub_lexeme lexbuf lexbuf.Lexing.lex_start_pos lexbuf.Lexing.lex_curr_pos in
# 114 "lsp/src/uri_lexer.mll"
                   ( { scheme = "file"; authority = ""; path ; query = None ; fragment = None } )
# 455 "lsp/src/uri_lexer.ml"

  | 4 ->
let
# 115 "lsp/src/uri_lexer.mll"
         path
# 461 "lsp/src/uri_lexer.ml"
= Lexing.sub_lexeme lexbuf lexbuf.Lexing.lex_start_pos lexbuf.Lexing.lex_curr_pos in
# 115 "lsp/src/uri_lexer.mll"
               ( { scheme = "file"; authority = ""; path = "/" ^ path ; query = None ; fragment = None } )
# 465 "lsp/src/uri_lexer.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf;
      __ocaml_lex_path_rec lexbuf __ocaml_lex_state

;;

# 117 "lsp/src/uri_lexer.mll"
 
  let of_string s =
    let lexbuf = Lexing.from_string s in
    uri lexbuf

  let of_path s =
    let lexbuf = Lexing.from_string s in
    path lexbuf

# 482 "lsp/src/uri_lexer.ml"
