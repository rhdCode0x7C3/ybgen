(* generated by dune *)

(** @canonical Ocamlformat_lib.Assoc *)
module Assoc = Ocamlformat_lib__Assoc

(** @canonical Ocamlformat_lib.Ast *)
module Ast = Ocamlformat_lib__Ast

(** @canonical Ocamlformat_lib.Box_debug *)
module Box_debug = Ocamlformat_lib__Box_debug

(** @canonical Ocamlformat_lib.Chunk *)
module Chunk = Ocamlformat_lib__Chunk

(** @canonical Ocamlformat_lib.Cmt *)
module Cmt = Ocamlformat_lib__Cmt

(** @canonical Ocamlformat_lib.Cmts *)
module Cmts = Ocamlformat_lib__Cmts

(** @canonical Ocamlformat_lib.Conf *)
module Conf = Ocamlformat_lib__Conf

(** @canonical Ocamlformat_lib.Conf_decl *)
module Conf_decl = Ocamlformat_lib__Conf_decl

(** @canonical Ocamlformat_lib.Conf_t *)
module Conf_t = Ocamlformat_lib__Conf_t

(** @canonical Ocamlformat_lib.Docstring *)
module Docstring = Ocamlformat_lib__Docstring

(** @canonical Ocamlformat_lib.Eol_compat *)
module Eol_compat = Ocamlformat_lib__Eol_compat

(** @canonical Ocamlformat_lib.Exposed *)
module Exposed = Ocamlformat_lib__Exposed

(** @canonical Ocamlformat_lib.Extended_ast *)
module Extended_ast = Ocamlformat_lib__Extended_ast

(** @canonical Ocamlformat_lib.Fmt *)
module Fmt = Ocamlformat_lib__Fmt

(** @canonical Ocamlformat_lib.Fmt_ast *)
module Fmt_ast = Ocamlformat_lib__Fmt_ast

(** @canonical Ocamlformat_lib.Fmt_odoc *)
module Fmt_odoc = Ocamlformat_lib__Fmt_odoc

(** @canonical Ocamlformat_lib.Literal_lexer *)
module Literal_lexer = Ocamlformat_lib__Literal_lexer

(** @canonical Ocamlformat_lib.Loc_tree *)
module Loc_tree = Ocamlformat_lib__Loc_tree

(** @canonical Ocamlformat_lib.Migrate_ast *)
module Migrate_ast = Ocamlformat_lib__Migrate_ast

(** @canonical Ocamlformat_lib.Multimap *)
module Multimap = Ocamlformat_lib__Multimap

(** @canonical Ocamlformat_lib.Non_overlapping_interval_tree *)
module Non_overlapping_interval_tree = Ocamlformat_lib__Non_overlapping_interval_tree

(** @canonical Ocamlformat_lib.Normalize_extended_ast *)
module Normalize_extended_ast = Ocamlformat_lib__Normalize_extended_ast

(** @canonical Ocamlformat_lib.Normalize_std_ast *)
module Normalize_std_ast = Ocamlformat_lib__Normalize_std_ast

(** @canonical Ocamlformat_lib.Params *)
module Params = Ocamlformat_lib__Params

(** @canonical Ocamlformat_lib.Parse_with_comments *)
module Parse_with_comments = Ocamlformat_lib__Parse_with_comments

(** @canonical Ocamlformat_lib.Prec *)
module Prec = Ocamlformat_lib__Prec

(** @canonical Ocamlformat_lib.Source *)
module Source = Ocamlformat_lib__Source

(** @canonical Ocamlformat_lib.Std_ast *)
module Std_ast = Ocamlformat_lib__Std_ast

(** @canonical Ocamlformat_lib.Std_longident *)
module Std_longident = Ocamlformat_lib__Std_longident

(** @canonical Ocamlformat_lib.Sugar *)
module Sugar = Ocamlformat_lib__Sugar

(** @canonical Ocamlformat_lib.Syntax *)
module Syntax = Ocamlformat_lib__Syntax

(** @canonical Ocamlformat_lib.Toplevel_lexer *)
module Toplevel_lexer = Ocamlformat_lib__Toplevel_lexer

(** @canonical Ocamlformat_lib.Translation_unit *)
module Translation_unit = Ocamlformat_lib__Translation_unit

(** @canonical Ocamlformat_lib.Version *)
module Version = Ocamlformat_lib__Version
